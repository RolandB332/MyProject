{"version":3,"file":"mainfrontend.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/delete-circle-dialog/delete-circle-dialog.component.ts","./src/app/components/delete-circle-dialog/delete-circle-dialog.component.html","./src/app/components/delete-wall-dialog/delete-wall-dialog.component.ts","./src/app/components/delete-wall-dialog/delete-wall-dialog.component.html","./src/app/components/loading-dialog/loading-dialog.component.ts","./src/app/components/loading-dialog/loading-dialog.component.html","./src/app/models/circle.ts","./src/app/models/color-rgb.ts","./src/app/models/convex-hull.ts","./src/app/models/device-connectivity.ts","./src/app/models/device-identity.ts","./src/app/models/device-location.ts","./src/app/models/device.ts","./src/app/models/field.ts","./src/app/models/scan-data.ts","./src/app/models/scene-desk.ts","./src/app/models/scene-field-type.ts","./src/app/models/scene-fields.ts","./src/app/models/scene-robot.ts","./src/app/models/scene.ts","./src/app/models/vector3.ts","./src/app/models/wall.ts","./src/app/pages/scene/circles/circles.component.ts","./src/app/pages/scene/circles/circles.component.html","./src/app/pages/scene/scan/scan.component.ts","./src/app/pages/scene/scan/scan.component.html","./src/app/pages/scene/scene.component.ts","./src/app/pages/scene/scene.component.html","./src/app/pages/scene/walls/walls.component.ts","./src/app/pages/scene/walls/walls.component.html","./src/app/pipes/safe.pipe.ts","./src/app/services/communicator.service.ts","./src/app/services/data.service.ts","./src/app/services/loading.service.ts","./src/app/services/navigation.service.ts","./src/app/services/selection.service.ts","./src/app/token.ts","./src/app/utils/rxjs.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ScanComponent} from './pages/scene/scan/scan.component';\r\nimport {WallsComponent} from './pages/scene/walls/walls.component';\r\nimport {CirclesComponent} from './pages/scene/circles/circles.component';\r\nimport {SceneComponent} from './pages/scene/scene.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: '/scene/scan', pathMatch: 'full'},\r\n  {\r\n    path: 'scene',\r\n    component: SceneComponent,\r\n    children: [\r\n      {path: 'scan', component: ScanComponent},\r\n      {path: 'walls', component: WallsComponent},\r\n      {path: 'circles', component: CirclesComponent}\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes, {useHash: true})\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {NavigationService} from './services/navigation.service';\r\nimport {DataService} from './services/data.service';\r\nimport {StateMachineClientService} from '@ets-components/statemachine-client';\r\nimport {LoadingService} from './services/loading.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {HttpErrorResponse} from '@angular/common/http';\r\nimport {BrandingLoaderService} from '@ets-components/ui';\r\nimport {LocationStrategy} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n\r\n  isLoadingSubscription?: Subscription;\r\n  userHasScannedSubscription?: Subscription;\r\n  convexHullsSubscription?: Subscription;\r\n\r\n  loading = true;\r\n  error?: string;\r\n\r\n  navItems = this.navigationService.getItems();\r\n\r\n  constructor(private dataService: DataService,\r\n              private brandingLoader: BrandingLoaderService,\r\n              private loadingService: LoadingService,\r\n              private stateClient: StateMachineClientService,\r\n              private navigationService: NavigationService) {\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.brandingLoader.load();\r\n\r\n    try {\r\n      await this.dataService.init();\r\n      // await this.stateClient.ready();\r\n\r\n      this.updateStateMachine();\r\n\r\n      this.isLoadingSubscription = this.loadingService.isLoading$().subscribe(() => {\r\n        this.updateStateMachine();\r\n      });\r\n      this.userHasScannedSubscription = this.dataService.getUserHasScanned$().subscribe(() => {\r\n        this.updateStateMachine();\r\n      });\r\n      this.convexHullsSubscription = this.dataService.getConvexHulls$().subscribe(() => {\r\n        this.updateStateMachine();\r\n      });\r\n    } catch (err: any) {\r\n      if (err instanceof HttpErrorResponse) {\r\n        this.error = 'cl0_common_error_connection_backend';\r\n      } else {\r\n        this.error = err.error ?? err;\r\n      }\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.isLoadingSubscription) {\r\n      this.isLoadingSubscription.unsubscribe();\r\n    }\r\n    if (this.userHasScannedSubscription) {\r\n      this.userHasScannedSubscription.unsubscribe();\r\n    }\r\n    if (this.convexHullsSubscription) {\r\n      this.convexHullsSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  updateStateMachine(): void {\r\n    const isLoading = this.loadingService.isLoading();\r\n    const userHasScanned = this.dataService.getUserHasScanned();\r\n    const isFieldsDefined = this.isFieldsDefined();\r\n\r\n    if (!isLoading && userHasScanned && isFieldsDefined) {\r\n      // this.stateClient.transition.enableNext();\r\n    } else {\r\n      // this.stateClient.transition.disableNext();\r\n    }\r\n\r\n    if (!isLoading) {\r\n      // this.stateClient.transition.enableInfo();\r\n      // this.stateClient.transition.enableSettings();\r\n    } else {\r\n      // this.stateClient.transition.disableInfo();\r\n      // this.stateClient.transition.disableSettings();\r\n    }\r\n  }\r\n\r\n  isFieldsDefined(): boolean {\r\n    const fields = this.dataService.getFields();\r\n    const convexHulls = this.dataService.getConvexHulls();\r\n\r\n    if (fields.singleCircleModeEnabled) {\r\n      return !fields.fields.find(f => f.distance <= 0);\r\n    } else {\r\n      return convexHulls.every(hull => hull.convexHull.length > 0);\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"!error && loading\" class=\"global-loading\">\r\n  <davinci-spinner></davinci-spinner>\r\n</div>\r\n<div *ngIf=\"error\" class=\"global-error\">\r\n  <davinci-callout type=\"error\">{{ error | translate }}</davinci-callout>\r\n</div>\r\n<ng-container *ngIf=\"!error && !loading\">\r\n  <ui-navigation [items]=\"navItems | async\"></ui-navigation>\r\n  <router-outlet></router-outlet>\r\n</ng-container>\r\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\r\nimport {environment} from '../environments/environment';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {\r\n  ETS_LANGUAGE_COLLECTIONS, ETS_LANGUAGE_FALLBACKS,\r\n  ETS_LANGUAGE_SERVICE_URL_HTTP,\r\n  ETS_LANGUAGE_SERVICE_URL_WEBSOCKET,\r\n  LanguageModule\r\n} from '@ets-components/language-service-client';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {BasicElementsFormLibModule} from '@sick-davinci/basic-elements-ng-form';\r\nimport {LoadingDialogComponent} from './components/loading-dialog/loading-dialog.component';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {ETS_STATEMACHINE_URL, StateMachineClientModule} from '@ets-components/statemachine-client';\r\nimport {TranslateModule} from '@ngx-translate/core';\r\nimport {ScanComponent} from './pages/scene/scan/scan.component';\r\nimport {CirclesComponent} from './pages/scene/circles/circles.component';\r\nimport {WallsComponent} from './pages/scene/walls/walls.component';\r\nimport translationsFallback from '../assets/i18n/scene.json';\r\nimport {SafePipe} from './pipes/safe.pipe';\r\nimport {SceneComponent} from './pages/scene/scene.component';\r\nimport {DeleteCircleDialogComponent} from './components/delete-circle-dialog/delete-circle-dialog.component';\r\nimport {DeleteWallDialogComponent} from './components/delete-wall-dialog/delete-wall-dialog.component';\r\nimport { ETS_APP_CONVEX_HULL_URL, ETS_APP_LOGIC_URL, ETS_APP_CIRCLES_URL, ETS_APP_WALLS_URL,\r\n  ETS_APP_FIELDS_URL, ETS_APP_SCAN_DATA_URL, ETS_APP_SCENE_URL } from './token';\r\nimport {APP_BASE_HREF, HashLocationStrategy, LocationStrategy} from '@angular/common';\r\nimport {UiModule, ETS_UI_DEBUG_ENABLED, ETS_UI_MANUAL_SERVICE_URL} from '@ets-components/ui';\r\n\r\n// SICK DaVinci Basic Elements\r\nimport '@sick-davinci/basic-elements';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SceneComponent,\r\n    LoadingDialogComponent,\r\n    DeleteCircleDialogComponent,\r\n    DeleteWallDialogComponent,\r\n    ScanComponent,\r\n    WallsComponent,\r\n    CirclesComponent,\r\n    SafePipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NoopAnimationsModule,\r\n    UiModule,\r\n    MatDialogModule,\r\n    LanguageModule,\r\n    StateMachineClientModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    BasicElementsFormLibModule,\r\n    TranslateModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [\r\n    // -----------------------------------------------------------------------------------------\r\n    // APP\r\n    // -----------------------------------------------------------------------------------------\r\n    {provide: LocationStrategy, useClass: HashLocationStrategy},\r\n    {provide: APP_BASE_HREF, useValue: window.location.pathname},\r\n    {provide: ETS_APP_LOGIC_URL, useValue: environment.logicUrl},\r\n    {provide: ETS_APP_CONVEX_HULL_URL, useValue: environment.convexHullUrl},\r\n    {provide: ETS_APP_CIRCLES_URL, useValue: environment.circlesUrl},\r\n    {provide: ETS_APP_WALLS_URL, useValue: environment.wallsUrl},\r\n    {provide: ETS_APP_FIELDS_URL, useValue: environment.fieldsUrl},\r\n    {provide: ETS_APP_SCAN_DATA_URL, useValue: environment.scanDataUrl},\r\n    {provide: ETS_APP_SCENE_URL, useValue: environment.sceneUrl},\r\n    // -----------------------------------------------------------------------------------------\r\n    // UI\r\n    // -----------------------------------------------------------------------------------------\r\n    {provide: ETS_UI_DEBUG_ENABLED, useValue: !environment.production},\r\n    {provide: ETS_UI_MANUAL_SERVICE_URL, useValue: environment.manualUrl},\r\n    // -----------------------------------------------------------------------------------------\r\n    // STATEMACHINE CLIENT\r\n    // -----------------------------------------------------------------------------------------\r\n    {provide: ETS_STATEMACHINE_URL, useValue: environment.statemachineUrl},\r\n    // -----------------------------------------------------------------------------------------\r\n    // LANGUAGE SERVICE\r\n    // -----------------------------------------------------------------------------------------\r\n    {provide: ETS_LANGUAGE_SERVICE_URL_HTTP, useValue: environment.languageServiceHttpUrl},\r\n    {provide: ETS_LANGUAGE_SERVICE_URL_WEBSOCKET, useValue: environment.languageServiceWsUrl},\r\n    {provide: ETS_LANGUAGE_COLLECTIONS, useValue: 'scene', multi: true},\r\n    {provide: ETS_LANGUAGE_FALLBACKS, useValue: translationsFallback, multi: true},\r\n    // -----------------------------------------------------------------------------------------\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, HostBinding, Inject, ViewEncapsulation} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {DataService} from '../../services/data.service';\r\n\r\nimport {Router} from '@angular/router';\r\nimport {Circle} from '../../models/circle';\r\n\r\nexport interface DeleteCircleDialogData {\r\n  circle: Circle;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-delete-circle-dialog',\r\n  templateUrl: './delete-circle-dialog.component.html',\r\n  styleUrls: ['./delete-circle-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DeleteCircleDialogComponent {\r\n\r\n  @HostBinding('attr.data-testid') testId = 'scene-deleteCircleDialog';\r\n\r\n  constructor(private dataService: DataService,\r\n              @Inject(MAT_DIALOG_DATA) private data: DeleteCircleDialogData,\r\n              private dialogRef: MatDialogRef<DeleteCircleDialogComponent>,\r\n              private router: Router) {\r\n    this.dialogRef.disableClose = true;\r\n  }\r\n\r\n  delete(): void {\r\n    this.dataService.deleteCircle(this.data.circle)\r\n      .then(() => {\r\n        this.router.navigateByUrl('/scene/scan');\r\n        this.dialogRef.close(true);\r\n      })\r\n      .catch((error: any) => {\r\n        console.error('delete circle dialog error', error);\r\n      });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n","<div class=\"delete-circle-dialog\">\r\n  <h2 mat-dialog-title>{{ 'cl0_scene_deleteCircleDialog_title' | translate }}</h2>\r\n  <mat-dialog-content>\r\n    <p>{{ 'cl0_scene_deleteCircleDialog_infoText' | translate }}</p>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <davinci-button icon=\"content/clear\" type=\"neutral\" (click)=\"close()\" data-testid=\"scene-deleteCircleDialog-cancel\">\r\n      {{ 'cl0_scene_deleteCircleDialog_cancelButton' | translate }}\r\n    </davinci-button>\r\n    <davinci-button icon=\"action/done\" type=\"primary\" (click)=\"delete()\" data-testid=\"scene-deleteCircleDialog-delete\">\r\n      {{ 'cl0_scene_deleteCircleDialog_deleteButton' | translate }}\r\n    </davinci-button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component, HostBinding, Inject, ViewEncapsulation} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {DataService} from '../../services/data.service';\r\n\r\nimport {Router} from '@angular/router';\r\n\r\nexport interface DeleteWallDialogData {\r\n  wallId: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-delete-wall-dialog',\r\n  templateUrl: './delete-wall-dialog.component.html',\r\n  styleUrls: ['./delete-wall-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DeleteWallDialogComponent {\r\n\r\n  @HostBinding('attr.data-testid') testId = 'scene-deleteWallDialog';\r\n\r\n  constructor(private dataService: DataService,\r\n              @Inject(MAT_DIALOG_DATA) private data: DeleteWallDialogData,\r\n              private dialogRef: MatDialogRef<DeleteWallDialogComponent>,\r\n              private router: Router) {\r\n    this.dialogRef.disableClose = true;\r\n  }\r\n\r\n  delete(): void {\r\n    this.dataService.deleteWall(this.data.wallId)\r\n      .then(() => {\r\n        this.router.navigateByUrl('/scene/scan');\r\n        this.dialogRef.close(true);\r\n      })\r\n      .catch((error: any) => {\r\n        console.error('delete wall dialog error', error);\r\n      });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n","<div class=\"delete-wall-dialog\">\r\n  <h2 mat-dialog-title>{{ 'cl0_scene_deleteWallDialog_title' | translate }}</h2>\r\n  <mat-dialog-content>\r\n    <p>{{ 'cl0_scene_deleteWallDialog_infoText' | translate }}</p>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <davinci-button icon=\"content/clear\" type=\"neutral\" (click)=\"close()\" data-testid=\"scene-deleteWallDialog-cancel\">\r\n      {{ 'cl0_scene_deleteWallDialog_cancelButton' | translate }}\r\n    </davinci-button>\r\n    <davinci-button icon=\"action/done\" type=\"primary\" (click)=\"delete()\" data-testid=\"scene-deleteWallDialog-delete\">\r\n      {{ 'cl0_scene_deleteWallDialog_deleteButton' | translate }}\r\n    </davinci-button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component, Inject, OnInit, ViewEncapsulation} from '@angular/core';\r\n\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {LoadingDialogData} from '../../services/loading.service';\r\nimport {Observable, timer} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-loading-dialog',\r\n  templateUrl: './loading-dialog.component.html',\r\n  styleUrls: ['./loading-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LoadingDialogComponent implements OnInit {\r\n\r\n  counter$?: Observable<number>;\r\n\r\n  constructor(private dialogRef: MatDialogRef<LoadingDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: LoadingDialogData) {\r\n    this.dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data?.countdown) {\r\n      this.counter$ = timer(0, 1000).pipe(map((x: number) => {\r\n        return Math.floor((this.data.countdown!.getTime() - new Date().getTime()) / 1000) + 1;\r\n      }));\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"loading-dialog\">\r\n  <mat-dialog-content>\r\n    <div class=\"text\" *ngIf=\"data?.text\">{{ data.text | translate }}</div>\r\n    <div class=\"countdown\" *ngIf=\"counter$\">{{ counter$ | async }}</div>\r\n    <davinci-spinner></davinci-spinner>\r\n  </mat-dialog-content>\r\n</div>\r\n","import {Vector3} from './vector3';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nexport class Circle {\r\n  uuid: string; // frontend value, not saved in backend\r\n  id?: string;\r\n  center: Vector3;\r\n  radiusList: {\r\n    fieldId: string;\r\n    radius: number;\r\n  }[];\r\n\r\n  constructor(center: Vector3, radiusList: { fieldId: string; radius: number; }[], id?: string, uuid?: string) {\r\n    this.uuid = uuid || uuidv4();\r\n    this.center = center;\r\n    this.radiusList = radiusList;\r\n    this.id = id;\r\n  }\r\n\r\n  static parseJson(obj: any, id?: string): Circle {\r\n    obj = JSON.parse(JSON.stringify(obj));\r\n    const center = Vector3.parseJson(obj.center);\r\n    return new Circle(center, obj.radiusList, id);\r\n  }\r\n\r\n  getJsonObject(): { center: { x: number; y: number; z: number }, radiusList: { fieldId: string; radius: number; }[] } {\r\n    return {\r\n      center: this.center.toJsonObject(),\r\n      radiusList: this.radiusList,\r\n    };\r\n  }\r\n\r\n  equalsPosition(circle: Circle): boolean {\r\n    return this.center.equals(circle.center);\r\n  }\r\n\r\n  equalsRadiusList(circle: Circle): boolean {\r\n    return this.radiusList.every(r1 => {\r\n      return circle.radiusList.find(r2 => {\r\n        return r1.radius === r2.radius && r1.fieldId === r2.fieldId;\r\n      });\r\n    });\r\n  }\r\n\r\n  equals(circle: Circle): boolean {\r\n    return this.equalsPosition(circle) && this.equalsRadiusList(circle) && this.id === circle.id;\r\n  }\r\n}\r\n","export class ColorRGB {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n\r\n  constructor(r: number, g: number, b: number) {\r\n    this.r = r;\r\n    this.g = g;\r\n    this.b = b;\r\n  }\r\n\r\n\r\n  static parseJson(obj: any): ColorRGB {\r\n    obj = JSON.parse(JSON.stringify(obj));\r\n    return new ColorRGB(obj.r, obj.g, obj.b);\r\n  }\r\n\r\n  toJsonObject(): { r: number, g: number, b: number } {\r\n    return {r: this.r, g: this.g, b: this.b};\r\n  }\r\n\r\n  equals(color: ColorRGB): boolean {\r\n    return this.r === color.r && this.g === color.g && this.b === color.b;\r\n  }\r\n\r\n  toString(): string {\r\n    return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';\r\n  }\r\n\r\n}\r\n","import {Vector3} from 'three';\r\n\r\nexport class ConvexHull {\r\n\r\n  fieldId: string;\r\n  convexHull: Vector3[];\r\n\r\n  constructor(data: ({ fieldId: string, convexHull: Vector3[] })) {\r\n    this.fieldId = data.fieldId;\r\n    this.convexHull = data.convexHull;\r\n  }\r\n\r\n  static parseJson(obj: any): ConvexHull {\r\n    obj = JSON.parse(JSON.stringify(obj));\r\n    return new ConvexHull({\r\n      fieldId: obj.fieldId,\r\n      convexHull: obj.convexHull\r\n    });\r\n  }\r\n\r\n}\r\n","export class DeviceConnectivity {\r\n    ip: string;\r\n    netmask: string;\r\n    gateway: string;\r\n    useDhcp: boolean;\r\n\r\n    constructor(ip: string, netmask: string, gateway: string, useDhcp: boolean) {\r\n        this.ip = ip;\r\n        this.netmask = netmask;\r\n        this.gateway = gateway;\r\n        this.useDhcp = useDhcp;\r\n    }\r\n\r\n    static parseJson(obj: any): DeviceConnectivity {\r\n        obj = JSON.parse(JSON.stringify(obj));\r\n        return new DeviceConnectivity(obj.ip, obj.netmask, obj.gateway, obj.useDhcp);\r\n    }\r\n\r\n    toJsonObject(): { ip: string, netmask: string, gateway: string, useDhcp: boolean} {\r\n        return { ip: this.ip, netmask: this.netmask, gateway: this.gateway, useDhcp: this.useDhcp};\r\n    }\r\n\r\n    equals(connectivity: DeviceConnectivity): boolean {\r\n        return this.ip === connectivity.ip &&\r\n            this.netmask === connectivity.netmask &&\r\n            this.gateway === connectivity.gateway &&\r\n            this.useDhcp === connectivity.useDhcp;\r\n    }\r\n}\r\n","export class DeviceIdentity {\r\n    deviceName: string;\r\n    serialNumber: string;\r\n    typeKey: string;\r\n    fwVersion: boolean;\r\n\r\n    constructor(deviceName: string, serialNumber: string, typeKey: string, fwVersion: boolean) {\r\n        this.deviceName = deviceName;\r\n        this.serialNumber = serialNumber;\r\n        this.typeKey = typeKey;\r\n        this.fwVersion = fwVersion;\r\n    }\r\n\r\n    static parseJson(obj: any): DeviceIdentity {\r\n        obj = JSON.parse(JSON.stringify(obj));\r\n        return new DeviceIdentity(obj.deviceName, obj.serialNumber, obj.typeKey, obj.fwVersion);\r\n    }\r\n\r\n    toJsonObject(): { deviceName: string, serialNumber: string, typeKey: string, fwVersion: boolean} {\r\n        return { deviceName: this.deviceName, serialNumber: this.serialNumber, typeKey: this.typeKey, fwVersion: this.fwVersion};\r\n    }\r\n\r\n    equals(identity: DeviceIdentity): boolean {\r\n        return this.deviceName === identity.deviceName &&\r\n            this.serialNumber === identity.serialNumber &&\r\n            this.typeKey === identity.typeKey &&\r\n            this.fwVersion === identity.fwVersion;\r\n    }\r\n}\r\n","import {Vector3} from './vector3';\r\nimport {ColorRGB} from './color-rgb';\r\n\r\nexport class DeviceLocation {\r\n\r\n  id: string;\r\n  color: ColorRGB;\r\n  transparency: string;\r\n  position: Vector3;\r\n  isFree!: boolean;\r\n\r\n  constructor(id: string, color: ColorRGB, transparency: string, position: Vector3, isFree = true) {\r\n    this.id = id;\r\n    this.color = color;\r\n    this.transparency = transparency;\r\n    this.position = position;\r\n    this.isFree = isFree;\r\n  }\r\n\r\n  static parseJsonToDeviceLocation(key: string, obj: any): DeviceLocation {\r\n    obj = JSON.parse(JSON.stringify(obj));\r\n    const color = ColorRGB.parseJson(obj.color);\r\n    const position = Vector3.parseJson(obj.position);\r\n    return new DeviceLocation(key, color, obj.transparency, position);\r\n  }\r\n\r\n  getJsonObject(): { [key: string]: { transparency: string,\r\n    color: { r: number, g: number, b: number }, position: { x: number, y: number, z: number } } } {\r\n    return {\r\n      [this.id]: {\r\n        color: this.color.toJsonObject(),\r\n        position: this.position.toJsonObject(),\r\n        transparency: this.transparency\r\n      }\r\n    };\r\n  }\r\n\r\n  equals(location: DeviceLocation): boolean {\r\n    return this.id === location.id &&\r\n      this.color.equals(location.color) &&\r\n      this.position.equals(location.position) &&\r\n      this.transparency === location.transparency;\r\n  }\r\n\r\n  getRGBAString(): string {\r\n    return 'rgba(' + this.color.r + ', ' + this.color.g + ', ' + this.color.b + ', ' + this.transparency + ')';\r\n  }\r\n}\r\n","import {DeviceIdentity} from './device-identity';\r\nimport {DeviceConnectivity} from './device-connectivity';\r\nimport {Vector3} from './vector3';\r\n\r\nexport class Device {\r\n\r\n  id: string;\r\n  position: Vector3;\r\n  rotation: Vector3; // the z-axis contains the rotation\r\n  location: string;\r\n  connectivity: DeviceConnectivity;\r\n  identity: DeviceIdentity;\r\n  applicationChecksum: string;\r\n\r\n  constructor(id: string, position: Vector3, rotation: Vector3, location: string,\r\n              connectivity: DeviceConnectivity, identity: DeviceIdentity,\r\n              applicationChecksum: string) {\r\n    this.id = id;\r\n    this.position = position;\r\n    this.rotation = rotation;\r\n    this.location = location;\r\n    this.connectivity = connectivity;\r\n    this.identity = identity;\r\n    this.applicationChecksum = applicationChecksum;\r\n  }\r\n\r\n  static parseJsonToDevice(key: string, obj: any): Device {\r\n    obj = JSON.parse(JSON.stringify(obj));\r\n    const position = Vector3.parseJson(obj.position);\r\n    const rotation = Vector3.parseJson(obj.rotation);\r\n    const connectivity = DeviceConnectivity.parseJson(obj.connectivity);\r\n    const identity = DeviceIdentity.parseJson(obj.identity);\r\n    return new Device(key, position, rotation, obj.location, connectivity, identity, obj.applicationChecksum);\r\n  }\r\n\r\n  getJsonObject(): {\r\n    [key: string]: {\r\n      location: string, position: { x: number, y: number, z: number },\r\n      rotation: { x: number, y: number, z: number }, identity: {\r\n        deviceName: string, serialNumber: string,\r\n        typeKey: string, fwVersion: boolean\r\n      }, connectivity: {\r\n        ip: string, netmask: string, gateway: string,\r\n        useDhcp: boolean\r\n      }, applicationChecksum: string\r\n    }\r\n  } {\r\n    return {\r\n      [this.id]: {\r\n        location: this.location,\r\n        position: this.position.toJsonObject(),\r\n        rotation: this.rotation.toJsonObject(),\r\n        connectivity: this.connectivity.toJsonObject(),\r\n        identity: this.identity.toJsonObject(),\r\n        applicationChecksum: this.applicationChecksum\r\n      }\r\n    };\r\n  }\r\n\r\n  equals(device: Device): boolean {\r\n    return this.id === device.id &&\r\n      this.position.equals(device.position) &&\r\n      this.rotation.equals(device.rotation) &&\r\n      this.location === device.location &&\r\n      this.connectivity.equals(device.connectivity) &&\r\n      this.identity.equals(device.identity) &&\r\n      this.applicationChecksum === device.applicationChecksum;\r\n  }\r\n}\r\n","import {ColorRGB} from './color-rgb';\r\nimport {Vector3} from './vector3';\r\n\r\nexport class Field {\r\n\r\n  uuid: string;\r\n  fieldType: string;\r\n  clazz: string;\r\n  label: string;\r\n  transparency: number;\r\n  color: ColorRGB;\r\n  polygons: Vector3[][];\r\n\r\n  constructor(uuid: string, fieldType: string, clazz: string, label: string, transparency: number,\r\n              color: ColorRGB, polygons: Vector3[][]) {\r\n    this.uuid = uuid;\r\n    this.fieldType = fieldType;\r\n    this.clazz = clazz;\r\n    this.label = label;\r\n    this.transparency = transparency;\r\n    this.color = color;\r\n    this.polygons = polygons;\r\n  }\r\n\r\n}\r\n","import {Field} from './field';\r\n\r\nexport class ScanData {\r\n\r\n  surrounding: { x: number, y: number, z: number }[];\r\n  fields: Field[];\r\n\r\n  constructor(surrounding: { x: number, y: number, z: number }[], fields: Field[]) {\r\n    this.surrounding = surrounding;\r\n    this.fields = fields;\r\n  }\r\n\r\n}\r\n","export class SceneDesk {\r\n\r\n    constructor(width: number, height: number) {\r\n        this.length = height;\r\n        this.width = width;\r\n    }\r\n\r\n    length: number;\r\n    width: number;\r\n\r\n    static parseJsonToDesk(obj: any): SceneDesk {\r\n        obj = JSON.parse(JSON.stringify(obj));\r\n        return new SceneDesk(obj.width, obj.length);\r\n    }\r\n\r\n    toJsonObject(): object {\r\n        return {width: this.width, length: this.length};\r\n    }\r\n\r\n    equals(desk: SceneDesk): boolean {\r\n        return this.width === desk.width && this.length === desk.length;\r\n    }\r\n}\r\n","export enum SceneFieldType {\r\n  ProtectionField = 'ProtectionField',\r\n  WarningField = 'WarningField'\r\n}\r\n","import {SceneField} from './scene-field';\r\nimport {SceneFieldType} from './scene-field-type';\r\n\r\nexport class SceneFields {\r\n\r\n  singleCircleModeEnabled: boolean;\r\n  defaultConfigFilename: string;\r\n  fields: SceneField[];\r\n\r\n  constructor(singleCircleModeEnabled: boolean, defaultConfigFilename: string, fields: SceneField[] = []) {\r\n    this.singleCircleModeEnabled = singleCircleModeEnabled;\r\n    this.defaultConfigFilename = defaultConfigFilename;\r\n    this.fields = fields;\r\n  }\r\n\r\n  static parseJsonToFields(obj: any): SceneFields {\r\n    obj = JSON.parse(JSON.stringify(obj));\r\n    return new SceneFields(obj.singleCircleModeEnabled, obj.defaultConfigFilename, obj.fields);\r\n  }\r\n\r\n  toJsonObject(): { singleCircleModeEnabled: boolean; defaultConfigFilename: string; fields: SceneField[] } {\r\n    return {\r\n      singleCircleModeEnabled: this.singleCircleModeEnabled,\r\n      defaultConfigFilename: this.defaultConfigFilename,\r\n      fields: this.fields\r\n    };\r\n  }\r\n\r\n  equals(fields: SceneFields): boolean {\r\n    return this.singleCircleModeEnabled === fields.singleCircleModeEnabled\r\n      && this.defaultConfigFilename === fields.defaultConfigFilename\r\n      && this.equalsFieldsData(fields);\r\n  }\r\n\r\n  equalsFieldsData(fields: SceneFields): boolean {\r\n    return this.fields.length === fields.fields.length\r\n      && this.fields.every(f => fields.fields.includes(f));\r\n  }\r\n\r\n  hasProtectionField(): boolean {\r\n    return !!this.fields.find(f => f.type === SceneFieldType.ProtectionField);\r\n  }\r\n\r\n  hasWarningField(): boolean {\r\n    return !!this.fields.find(f => f.type === SceneFieldType.WarningField);\r\n  }\r\n\r\n}\r\n","export class SceneRobot {\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    x: number;\r\n    y: number;\r\n\r\n    static parseJsonToRobot(obj: any): SceneRobot {\r\n        obj = JSON.parse(JSON.stringify(obj));\r\n        return new SceneRobot(obj.position.x, obj.position.y);\r\n    }\r\n\r\n    toJsonObject(): {position: {x: number, y: number, z: number}} {\r\n        return { position: {x: this.x, y: this.y, z: 0}};\r\n    }\r\n\r\n    equals(robot: SceneRobot): boolean {\r\n        return this.x === robot.x && this.y === robot.y;\r\n    }\r\n}\r\n","import {DeviceLocation} from './device-location';\r\nimport {SceneFields} from './scene-fields';\r\nimport {SceneDesk} from './scene-desk';\r\nimport {SceneRobot} from './scene-robot';\r\nimport {Device} from './device';\r\n\r\nexport class Scene {\r\n\r\n  constructor(desk: SceneDesk, robot: SceneRobot, fields: SceneFields, locations: DeviceLocation[], devices: Device[]) {\r\n    this.robot = robot;\r\n    this.desk = desk;\r\n    this.fields = fields;\r\n    this.locations = locations;\r\n    this.devices = devices;\r\n  }\r\n\r\n  robot: SceneRobot;\r\n  desk: SceneDesk;\r\n  fields: SceneFields;\r\n  locations: DeviceLocation[];\r\n  devices: Device[];\r\n\r\n  static parseJsonToScene(obj: any): Scene {\r\n    obj = JSON.parse(JSON.stringify(obj));\r\n    const deskObj = SceneDesk.parseJsonToDesk(obj.desk);\r\n    const robotObj = SceneRobot.parseJsonToRobot(obj.robot);\r\n    const fieldsObj = SceneFields.parseJsonToFields(obj.safety);\r\n    const devices = new Array<Device>();\r\n    const assignedLocations = [];\r\n    for (const key of Object.keys(obj.devices)) {\r\n      const deviceObj = Device.parseJsonToDevice(key, obj.devices[key]);\r\n      assignedLocations.push(deviceObj.location);\r\n      devices.push(deviceObj);\r\n    }\r\n    const locations = new Array<DeviceLocation>();\r\n    for (const key of Object.keys(obj.locations)) {\r\n      const locationObj = DeviceLocation.parseJsonToDeviceLocation(key, obj.locations[key]);\r\n      if (assignedLocations.find(id => locationObj.id === id)) {\r\n        locationObj.isFree = false;\r\n      } else {\r\n        locationObj.isFree = true;\r\n      }\r\n      locations.push(locationObj);\r\n    }\r\n    return new Scene(deskObj, robotObj, fieldsObj, locations, devices);\r\n  }\r\n}\r\n","export class Vector3 {\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n\r\n  constructor(x: number, y: number, z: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n  }\r\n\r\n\r\n  static parseJson(obj: any): Vector3 {\r\n    obj = JSON.parse(JSON.stringify(obj));\r\n    return new Vector3(obj.x, obj.y, obj.z);\r\n  }\r\n\r\n  toJsonObject(): { x: number, y: number, z: number } {\r\n    return {x: this.x, y: this.y, z: this.z};\r\n  }\r\n\r\n  equals(vector: Vector3): boolean {\r\n    return this.x === vector.x && this.y === vector.y && this.z === vector.z;\r\n  }\r\n\r\n}\r\n","import {Vector3} from './vector3';\r\n\r\nexport class Wall {\r\n\r\n  id: string;\r\n  from: Vector3;\r\n  to: Vector3;\r\n\r\n  constructor(id: string, from: Vector3, to: Vector3) {\r\n    this.id = id;\r\n    this.from = from;\r\n    this.to = to;\r\n  }\r\n\r\n  static parseJson(obj: any, id: string): Wall {\r\n    obj = JSON.parse(JSON.stringify(obj));\r\n    const from = Vector3.parseJson(obj.p1);\r\n    const to = Vector3.parseJson(obj.p2);\r\n    return new Wall(id, from, to);\r\n  }\r\n\r\n  equalsPosition(wall: Wall): boolean {\r\n    return this.from.equals(wall.from) && this.to.equals(wall.to);\r\n  }\r\n\r\n  equals(wall: Wall): boolean {\r\n    return this.equalsPosition(wall) && this.id === wall.id;\r\n  }\r\n}\r\n","import {DataService} from '../../../services/data.service';\r\nimport {Component, HostBinding, OnInit} from '@angular/core';\r\nimport {SelectionService} from '../../../services/selection.service';\r\nimport {SceneClickEvent, SceneElement, SceneElementType} from '@ets-components/ui';\r\nimport {AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\r\nimport {environment} from 'src/environments/environment';\r\nimport {Router} from '@angular/router';\r\nimport {Vector2} from 'three';\r\nimport {Circle} from '../../../models/circle';\r\nimport {Vector3} from '../../../models/vector3';\r\nimport {SceneField} from 'src/app/models/scene-field';\r\n\r\n@Component({\r\n  selector: 'app-circles',\r\n  templateUrl: './circles.component.html',\r\n  styleUrls: ['./circles.component.scss']\r\n})\r\nexport class CirclesComponent implements OnInit {\r\n\r\n  constructor(private dataService: DataService,\r\n              private selectionService: SelectionService,\r\n              private router: Router) {\r\n    this.form = new FormGroup({}, {validators: [\r\n        this.smallerThanInnerValidator(),\r\n        this.equalsOtherFieldValidator(),\r\n      ]\r\n    });\r\n  }\r\n\r\n  static readonly DEFAULT_NEW_CIRCLE_RADIUS = 1000;\r\n  @HostBinding('attr.data-testid') testId = 'scene-circles';\r\n\r\n  originalSelectedCircle?: Circle;\r\n  selectedCircle?: Circle;\r\n  positionChanged = false;\r\n\r\n  form: FormGroup;\r\n  errorMessage?: string;\r\n\r\n  ngOnInit(): void {\r\n    this.initSelectedCircleUpdaters();\r\n    this.initSelection();\r\n  }\r\n\r\n  smallerThanInnerValidator(): ValidatorFn {\r\n    return (c: FormGroup): ValidationErrors | null => {\r\n      const fields = this.getFieldsByControls(c.controls);\r\n\r\n      fields.forEach(([name, field], index) => {\r\n        if (index > 0) {\r\n          // skip if field already has another error\r\n          if (field.errors && !field.errors.smallerThanInner) {\r\n            return;\r\n          }\r\n\r\n          const outerFields = fields.slice(0, index);\r\n          const minValue = Math.max(...outerFields.map(f => +f[1].value));\r\n\r\n          if (+field.value < minValue) {\r\n            field.setErrors({smallerThanInner: true});\r\n          } else {\r\n            field.setErrors(null);\r\n          }\r\n        }\r\n      });\r\n\r\n      return null;\r\n    };\r\n  }\r\n\r\n  equalsOtherFieldValidator(): ValidatorFn {\r\n    return (c: FormGroup): ValidationErrors | null => {\r\n      const fields = this.getFieldsByControls(c.controls);\r\n\r\n      fields.forEach(([name, field]) => {\r\n        // skip if field already has another error\r\n        if (field.errors && !field.errors.equalsOtherField) {\r\n          return;\r\n        }\r\n\r\n        // skip if field value is NaN\r\n        if (Number.isNaN(field.value)) {\r\n          return;\r\n        }\r\n\r\n        const otherField = fields.find(([n, f]) => f !== field && !Number.isNaN(f.value) && f.value === field.value);\r\n\r\n        if (otherField) {\r\n          field.setErrors({equalsOtherField: true});\r\n        } else {\r\n          field.setErrors(null);\r\n        }\r\n      });\r\n\r\n      return null;\r\n    };\r\n  }\r\n\r\n  getFieldsByControls(controls: { [key: string]: AbstractControl }): [string, AbstractControl][] {\r\n    return Object.entries(controls).filter(fc => fc[0].startsWith('field_'));\r\n  }\r\n\r\n  getFieldLabel(fieldControlKey: string): string {\r\n    const fieldId = fieldControlKey.split('_')[2];\r\n    const field: SceneField = this.dataService.getFields().fields.find((f: SceneField) => f.id === fieldId);\r\n    if (field) {\r\n      return field.label;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  initSelection(): void {\r\n    this.selectionService.setClickHandler(async (event: SceneClickEvent) => {\r\n      if (this.selectedCircle) {\r\n        // we are already editing a circle so click is disabled\r\n        return false;\r\n      }\r\n\r\n      // create a new circle\r\n      const circle = this.addCircle(event.position);\r\n      this.selectionService.select(\r\n        new SceneElement(SceneElementType.Circle, circle.id, circle.uuid)\r\n      );\r\n      return false;\r\n    });\r\n\r\n    this.selectionService.setSelectHandler((element: SceneElement | null) => {\r\n      if (this.selectedCircle) {\r\n        // we are currently editing a circle so selection is disabled\r\n        return false;\r\n      }\r\n\r\n      // allow selection of circle to edit it\r\n      return element?.type === SceneElementType.Circle;\r\n    });\r\n\r\n    if (this.selectionService.getSelection()?.type !== SceneElementType.Circle) {\r\n      this.selectionService.select(null, true);\r\n    }\r\n  }\r\n\r\n  initSelectedCircleUpdaters(): void {\r\n    this.selectionService.getSelection$().subscribe(() => {\r\n      this.updateSelectedCircle();\r\n    });\r\n    this.dataService.getCircles$().subscribe(() => {\r\n      this.updateSelectedCircle();\r\n    });\r\n  }\r\n\r\n  handleInputChange(): void {\r\n    if (!this.form.errors) {\r\n      this.sendDataToDataService();\r\n    }\r\n  }\r\n\r\n  fields(): { [key: string]: AbstractControl } {\r\n    return Object.keys(this.form.controls)\r\n      .filter(name => name.startsWith('field_'))\r\n      .reduce((res, key) => (res[key] = this.form.controls[key], res), {});\r\n  }\r\n\r\n  updateSelectedCircle(): void {\r\n    const selectedElement = this.selectionService.getSelection();\r\n    const allCircles = this.dataService.getCircles();\r\n\r\n    let newSelectedCircle;\r\n    if (selectedElement?.type === SceneElementType.Circle) {\r\n      newSelectedCircle = allCircles.find(c => c.uuid === selectedElement.uuid);\r\n    }\r\n\r\n    // update selected circle\r\n    this.selectedCircle = newSelectedCircle;\r\n\r\n    // update original selected circle\r\n    if (newSelectedCircle !== this.originalSelectedCircle &&\r\n      (!newSelectedCircle || !this.originalSelectedCircle || newSelectedCircle.uuid !== this.originalSelectedCircle.uuid)) {\r\n      this.originalSelectedCircle = newSelectedCircle;\r\n    }\r\n\r\n    // update positionChanged\r\n    if (this.originalSelectedCircle && this.selectedCircle) {\r\n      this.positionChanged = !this.originalSelectedCircle.center.equals(this.selectedCircle.center);\r\n    } else {\r\n      this.positionChanged = false;\r\n    }\r\n\r\n    // remove old errors\r\n    this.errorMessage = '';\r\n\r\n    // add fields\r\n    this.dataService.getFields().fields.forEach((field: SceneField) => {\r\n      const radius: { fieldId: string; radius: number; } = this.selectedCircle?.radiusList.find(r => field.id === r.fieldId);\r\n      if (!radius) {\r\n        return;\r\n      }\r\n\r\n      if (!this.form.contains('field_' + field.type + '_' + field.id)) {\r\n        this.form.addControl('field_' + field.type + '_' + field.id,\r\n          new FormControl('', [\r\n            Validators.required,\r\n            Validators.pattern('^[0-9]+$'),\r\n            Validators.min(1),\r\n            Validators.max(environment.MAX_INTEGER_INPUT)\r\n          ])\r\n        );\r\n      }\r\n\r\n      this.form.patchValue({\r\n        ['field_' + field.type + '_' + field.id]: radius.radius\r\n      });\r\n\r\n      this.form.get('field_' + field.type + '_' + field.id).markAsTouched();\r\n    });\r\n  }\r\n\r\n  sendDataToDataService(): void {\r\n    if (!this.selectedCircle) {\r\n      return;\r\n    }\r\n\r\n    this.selectedCircle.radiusList.forEach((r: { fieldId: string; radius: number; }) => {\r\n      const field = this.dataService.getFields().fields.find(f => f.id === r.fieldId);\r\n\r\n      if (!field) {\r\n        return;\r\n      }\r\n\r\n      r.radius = +this.form.value['field_' + field.type + '_' + field.id];\r\n    });\r\n\r\n    this.dataService.updateCircle(this.selectedCircle);\r\n  }\r\n\r\n  addCircle(position: Vector2): Circle {\r\n    const radiusList = [];\r\n\r\n    let margin = 0;\r\n    this.dataService.getFields().fields.forEach((field, index) => {\r\n      radiusList.push({\r\n        fieldId: field.id,\r\n        radius: CirclesComponent.DEFAULT_NEW_CIRCLE_RADIUS + (index * margin),\r\n      });\r\n\r\n      margin += 250;\r\n    });\r\n    const circle = new Circle(\r\n      new Vector3(position.x, position.y, 0),\r\n      radiusList\r\n    );\r\n\r\n    this.dataService.addCircle(circle);\r\n\r\n    return circle;\r\n  }\r\n\r\n  onApply(): void {\r\n    if (!this.selectedCircle) {\r\n      return;\r\n    }\r\n\r\n    this.errorMessage = '';\r\n\r\n    this.sendDataToDataService();\r\n\r\n    this.dataService.saveCircle(this.selectedCircle)\r\n      .then(() => {\r\n        this.router.navigateByUrl('/scene/scan');\r\n      })\r\n      .catch((err) => {\r\n        if (err.error) {\r\n          this.errorMessage = err.error;\r\n        } else {\r\n          this.errorMessage = err;\r\n        }\r\n      });\r\n  }\r\n\r\n  async onCancel(): Promise<void> {\r\n    if (!this.selectedCircle) {\r\n      return;\r\n    }\r\n\r\n    if (this.selectedCircle.id) {\r\n      await this.dataService.loadCircles();\r\n    } else {\r\n      await this.dataService.deleteCircle(this.selectedCircle);\r\n    }\r\n\r\n    await this.selectionService.select(null, true);\r\n\r\n    this.router.navigateByUrl('/scene/scan');\r\n  }\r\n}\r\n","<ui-header id=\"circles\" [title]=\"'cl0_scene_circles_title' | translate\"></ui-header>\r\n\r\n<div class=\"content\">\r\n  <p>{{ 'cl0_scene_circles_text' | translate }}</p>\r\n\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"onApply()\" [ngClass]=\"{'show': selectedCircle}\">\r\n    <div *ngFor=\"let field of fields() | keyvalue; let i=index\">\r\n      <label>\r\n        <davinci-value-display [label]=\"getFieldLabel(field.key) | translate\"></davinci-value-display>\r\n      </label>\r\n      <div>\r\n        <davinci-numeric-field [formControlName]=\"field.key\"\r\n                               [attr.error]=\"field.value.invalid && (field.value.dirty || field.value.touched) ? true : null\"\r\n                               required\r\n                               unit=\"mm\"\r\n                               min=0\r\n                               (change)=\"handleInputChange()\"\r\n                               [attr.data-testid]=\"'scene-circles-field-'+i\"></davinci-numeric-field>\r\n      </div>\r\n      <davinci-status-text *ngIf=\"field.value.invalid && (field.value.dirty || field.value.touched)\"\r\n                           error data-testid=\"scene-circles-field-error\">\r\n        <ng-template [ngIf]=\"field.value.errors?.required\">\r\n          {{ 'cl0_scene_input_required' | translate }}\r\n        </ng-template>\r\n        <ng-template [ngIf]=\"field.value.errors?.smallerThanInner\">\r\n          {{ 'cl0_scene_circles_error_size' | translate }}\r\n        </ng-template>\r\n        <ng-template [ngIf]=\"field.value.errors?.equalsOtherField\">\r\n          {{ 'cl0_scene_circles_error_equalsOtherField' | translate }}\r\n        </ng-template>\r\n        <ng-template [ngIf]=\"field.value.errors?.max || field.value.errors?.min\">\r\n          {{ 'cl0_scene_inputIntegerRange' | translate }}\r\n        </ng-template>\r\n      </davinci-status-text>\r\n    </div>\r\n\r\n    <davinci-callout *ngIf=\"errorMessage\" type=\"error\"\r\n                     data-testid=\"scene-circles-calloutFailure\">{{ errorMessage | translate}}</davinci-callout>\r\n\r\n    <div class=\"form-buttons\">\r\n      <davinci-button type=\"outline\" (click)=\"onCancel()\" data-testid=\"scene-circles-cancel\">\r\n        {{ 'cl0_scene_circles_cancelButton' | translate }}\r\n      </davinci-button>\r\n      <davinci-button [disabled]=\"!form.valid\"\r\n                      (click)=\"onApply()\"\r\n                      data-testid=\"scene-circles-apply\">\r\n        {{ 'cl0_scene_circles_applyButton' | translate }}\r\n      </davinci-button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import {DataService} from '../../../services/data.service';\r\nimport {Component, HostBinding, OnInit} from '@angular/core';\r\nimport {LoadingService} from '../../../services/loading.service';\r\nimport {SelectionService} from '../../../services/selection.service';\r\nimport {SceneElement, SceneElementType} from '@ets-components/ui';\r\nimport {Device} from '../../../models/device';\r\nimport {Router} from '@angular/router';\r\nimport {from} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-scan',\r\n  templateUrl: './scan.component.html',\r\n  styleUrls: ['./scan.component.scss']\r\n})\r\nexport class ScanComponent implements OnInit {\r\n\r\n  @HostBinding('attr.data-testid') testId = 'scene-scan';\r\n\r\n  scanError?: string;\r\n\r\n  readonly DELAY_MIN = 0;\r\n  readonly DELAY_MAX = 10;\r\n  delay = 5;\r\n\r\n  constructor(private dataService: DataService,\r\n              private selectionService: SelectionService,\r\n              private loading: LoadingService,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.selectionService.setClickHandler(undefined);\r\n    this.selectionService.setSelectHandler((element: SceneElement | null) => {\r\n      // selection is only possible is scanned before\r\n      if (!this.dataService.getUserHasScanned()) {\r\n        return false;\r\n      }\r\n      // allow selection of walls\r\n      if (element?.type === SceneElementType.Wall) {\r\n        return true;\r\n      }\r\n      // allow selection of circles\r\n      if (element?.type === SceneElementType.Circle) {\r\n        this.router.navigateByUrl('/scene/circles');\r\n        return true;\r\n      }\r\n\r\n      // click on sensor = toggle sensor scan visibility\r\n      if (element?.type === SceneElementType.Sensor && element?.referenceId) {\r\n        const device = this.dataService.getDevices().find((d: Device) => d.location === element?.referenceId);\r\n        if (device) {\r\n          this.dataService.toggleSensorScanVisibility(device.id);\r\n        }\r\n        return false;\r\n      }\r\n\r\n      // deselect if something else has been selected\r\n      return null;\r\n    });\r\n    this.selectionService.select(null, true);\r\n  }\r\n\r\n  scan(): void {\r\n    this.scanError = undefined;\r\n    this.dataService.clearSensorScans();\r\n\r\n    const endTime = new Date();\r\n    endTime.setSeconds(endTime.getSeconds() + this.delay);\r\n\r\n    const delay$ = from(this.delayPromise(endTime));\r\n    this.loading.waitUntil(delay$, {\r\n      text: 'cl0_scene_scan_countdown_text',\r\n      countdown: endTime\r\n    }).subscribe({\r\n      next: () => {\r\n        const scanAllDevices$ = from(this.dataService.scanAllDevices());\r\n        this.loading.waitUntil(scanAllDevices$).subscribe({\r\n          error: (error: any) => {\r\n            this.scanError = error.error ?? JSON.stringify(error);\r\n          }\r\n        });\r\n      },\r\n      error: () => {\r\n        this.scanError = 'cl0_internal_error';\r\n      }\r\n    });\r\n  }\r\n\r\n  updateDelay(event: any): void {\r\n    this.delay = +event.target.value;\r\n  }\r\n\r\n  delayPromise(endTime: Date): Promise<void> {\r\n    const milliseconds = Math.floor((endTime.getTime() - new Date().getTime()));\r\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n  }\r\n}\r\n","<ui-header id=\"scan\" [title]=\"'cl0_scene_scan_title' | translate\"></ui-header>\r\n\r\n<div class=\"content\">\r\n  <p>{{ 'cl0_scene_scan_intro' | translate }}</p>\r\n  <br>\r\n  <p>{{ 'cl0_scene_scan_text' | translate }}</p>\r\n\r\n  <davinci-slider [attr.value]=\"delay\"\r\n                  (change)=\"updateDelay($event)\"\r\n                  [attr.min]=\"DELAY_MIN\"\r\n                  [attr.max]=\"DELAY_MAX\"\r\n                  data-testid=\"scene-scan-slider\"\r\n                  [attr.legend]=\"true\"></davinci-slider>\r\n\r\n  <davinci-callout *ngIf=\"scanError\" type=\"error\" data-testid=\"scene-scan-error\">\r\n    <b>{{scanError.statusCode}}: {{ scanError.error | translate }}</b>\r\n    <br>\r\n    {{ scanError.message | translate }}\r\n  </davinci-callout>\r\n\r\n  <davinci-button type=\"outline\" (click)=\"scan()\" data-testid=\"scene-scan-apply\">\r\n    {{ 'cl0_scene_scan_apply' | translate }}\r\n  </davinci-button>\r\n</div>\r\n","import {Component, HostBinding, OnInit} from '@angular/core';\r\nimport {DataService} from '../../services/data.service';\r\nimport {SceneDesk} from '../../models/scene-desk';\r\nimport {SceneRobot} from '../../models/scene-robot';\r\nimport {SceneFields} from '../../models/scene-fields';\r\nimport {DeviceLocation} from '../../models/device-location';\r\nimport {SelectionService} from '../../services/selection.service';\r\nimport {Wall} from '../../models/wall';\r\nimport {\r\n  DeleteWallDialogComponent,\r\n  DeleteWallDialogData\r\n} from '../../components/delete-wall-dialog/delete-wall-dialog.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {Circle} from '../../models/circle';\r\nimport {ConvexHull} from '../../models/convex-hull';\r\nimport {\r\n  DeleteCircleDialogComponent,\r\n  DeleteCircleDialogData\r\n} from '../../components/delete-circle-dialog/delete-circle-dialog.component';\r\nimport {Vector3} from '../../models/vector3';\r\nimport * as THREE from 'three';\r\nimport {\r\n  SceneClickEvent,\r\n  SceneDirection,\r\n  SceneElement,\r\n  SceneElementType,\r\n  SceneSettings,\r\n  SceneSettingsCircle,\r\n  SceneSettingsConvexHull,\r\n  SceneSettingsField,\r\n  SceneSettingsFieldType,\r\n  SceneSettingsSensor,\r\n  SceneSettingsWall\r\n} from '@ets-components/ui';\r\n\r\n@Component({\r\n  selector: 'app-scene',\r\n  templateUrl: './scene.component.html',\r\n  styleUrls: ['./scene.component.scss']\r\n})\r\nexport class SceneComponent implements OnInit {\r\n\r\n  @HostBinding('attr.data-testid') testId = 'scene-scene';\r\n\r\n  selection$ = this.selectionService.getSelection$();\r\n  settings!: SceneSettings;\r\n\r\n  constructor(private dialog: MatDialog,\r\n              private dataService: DataService,\r\n              private selectionService: SelectionService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.settings = new SceneSettings();\r\n\r\n    this.settings = {\r\n      ...this.settings,\r\n      actionMenu: {\r\n        ...this.settings.actionMenu,\r\n        enabled: true\r\n      },\r\n      visibility: {\r\n        ...this.settings.visibility,\r\n        walls: true,\r\n        circles: true,\r\n        scanData: true,\r\n        fields: true,\r\n        assignedLocations: true\r\n      }\r\n    };\r\n\r\n    this.dataService.isFieldConfigAvailable().then((available: boolean) => {\r\n      if (available) {\r\n        this.settings.actionMenu.elements.loadConfig.enabled = true;\r\n        this.settings.actionMenu.elements.loadConfig.disabled = false;\r\n      } else {\r\n        this.settings.actionMenu.elements.loadConfig.enabled = false;\r\n        this.settings.actionMenu.elements.loadConfig.disabled = true;\r\n      }\r\n    });\r\n\r\n    this.dataService.getDesk$().subscribe((desk: SceneDesk) => {\r\n      this.settings = {\r\n        ...this.settings,\r\n        visibility: {\r\n          ...this.settings.visibility,\r\n          desk: true,\r\n        },\r\n        desk: {\r\n          ...this.settings.desk,\r\n          width: desk.length,\r\n          height: desk.width\r\n        }\r\n      };\r\n    });\r\n\r\n    this.dataService.getRobot$().subscribe((robot: SceneRobot) => {\r\n      this.settings = {\r\n        ...this.settings,\r\n        visibility: {\r\n          ...this.settings.visibility,\r\n          robot: true,\r\n        },\r\n        robot: {\r\n          ...this.settings.robot,\r\n          position: new THREE.Vector2(robot.x, robot.y)\r\n        }\r\n      };\r\n    });\r\n\r\n    this.dataService.getFields$().subscribe((fields: SceneFields) => {\r\n      this.settings = {\r\n        ...this.settings,\r\n        visibility: {\r\n          ...this.settings.visibility,\r\n          fields: fields.singleCircleModeEnabled\r\n        },\r\n        fields: fields.fields.map(f => {\r\n          return new SceneSettingsField({\r\n            id: f.id,\r\n            distance: f.distance,\r\n            type: SceneSettingsFieldType[f.type],\r\n            label: f.label\r\n          });\r\n        })\r\n      };\r\n    });\r\n\r\n    this.dataService.getLocations$().subscribe(() => {\r\n      this.updateSensors();\r\n    });\r\n\r\n    this.dataService.getDevices$().subscribe(() => {\r\n      this.updateSensors();\r\n    });\r\n\r\n    this.dataService.getSensorScans$().subscribe(() => {\r\n      this.settings.visibility.scanData = true;\r\n      this.updateSensors();\r\n    });\r\n\r\n    this.dataService.getWalls$().subscribe((walls: Wall[]) => {\r\n      this.settings = {\r\n        ...this.settings,\r\n        visibility: {\r\n          ...this.settings.visibility,\r\n          walls: true\r\n        },\r\n        walls: walls.map((wall: Wall) => new SceneSettingsWall({\r\n          id: wall.id,\r\n          visible: true,\r\n          showDelete: true,\r\n          from: new THREE.Vector2(wall.from.x, wall.from.y),\r\n          to: new THREE.Vector2(wall.to.x, wall.to.y)\r\n        }))\r\n      };\r\n    });\r\n\r\n    this.dataService.getCircles$().subscribe((circles: Circle[]) => {\r\n      this.settings = {\r\n        ...this.settings,\r\n        circles: circles.map((circle: Circle) => new SceneSettingsCircle({\r\n          uuid: circle.uuid,\r\n          referenceId: circle.id,\r\n          visible: true,\r\n          showDelete: true,\r\n          showMove: true,\r\n          position: new THREE.Vector2(circle.center.x, circle.center.y),\r\n          radiusList: circle.radiusList\r\n        })),\r\n      };\r\n    });\r\n\r\n    this.dataService.getConvexHulls$().subscribe((convexHulls: ConvexHull[]) => {\r\n      this.settings = {\r\n        ...this.settings,\r\n        convexHulls: convexHulls.map(hull => {\r\n          return new SceneSettingsConvexHull({\r\n            fieldId: hull.fieldId,\r\n            convexHull: hull.convexHull\r\n          });\r\n        })\r\n      };\r\n    });\r\n  }\r\n\r\n  updateSensors(): void {\r\n    const locations = this.dataService.getLocations();\r\n    const devices = this.dataService.getDevices();\r\n    const allScans = this.dataService.getSensorScans();\r\n\r\n    this.settings = {\r\n      ...this.settings,\r\n      sensors: locations.map((location: DeviceLocation) => {\r\n        const device = devices.find(d => d.location === location.id);\r\n        const sensorScan = device ? allScans[device.id] : undefined;\r\n\r\n        return new SceneSettingsSensor({\r\n          id: location.id,\r\n          text: location.id,\r\n          visible: true,\r\n          assigned: !location.isFree,\r\n          showDeleteIcon: false,\r\n          assignedColor: location.getRGBAString(),\r\n          position: new THREE.Vector2(\r\n            device?.position.x ?? location.position.x,\r\n            device?.position.y ?? location.position.y\r\n          ),\r\n          rotation: device?.rotation.z ?? 0,\r\n          showScanData: sensorScan?.visible ?? false,\r\n          scanData: sensorScan ? {\r\n            surrounding: sensorScan.data.surrounding.map(s => {\r\n              return {x: s.x, y: s.y, z: s.z};\r\n            }),\r\n            fields: sensorScan.data.fields.map(field => {\r\n              return {\r\n                color: field.color.toString(),\r\n                polygons: field.polygons?.map(part => part?.map(p => {\r\n                  return {x: p.x, y: p.y, z: p.y};\r\n                }) ?? []) ?? [],\r\n              };\r\n            })\r\n          } : {\r\n            surrounding: [],\r\n            fields: []\r\n          }\r\n        });\r\n      })\r\n    };\r\n  }\r\n\r\n  onClick(event: SceneClickEvent): void {\r\n    this.selectionService.click(event);\r\n  }\r\n\r\n  onDelete(element: SceneElement): void {\r\n    if (element.type === SceneElementType.Wall && element.referenceId) {\r\n      this.dialog.open(DeleteWallDialogComponent, {\r\n        width: '400px',\r\n        data: {wallId: element.referenceId} as DeleteWallDialogData\r\n      });\r\n    } else if (element.type === SceneElementType.Circle && element.uuid) {\r\n      const circle = this.dataService.getCircles().find(c => c.uuid === element.uuid);\r\n\r\n      this.dialog.open(DeleteCircleDialogComponent, {\r\n        width: '400px',\r\n        data: {circle} as DeleteCircleDialogData\r\n      });\r\n    }\r\n  }\r\n\r\n  onMove(data: { element: SceneElement, direction: string }): void {\r\n    if (data.element.type === SceneElementType.Circle && data.element.uuid) {\r\n      const circle = this.dataService.getCircles().find(c => c.uuid === data.element.uuid);\r\n\r\n      if (!circle) {\r\n        return;\r\n      }\r\n\r\n      const stepSize = 50;\r\n\r\n      switch (data.direction) {\r\n        case SceneDirection.Up:\r\n          circle.center.y += stepSize;\r\n          break;\r\n        case SceneDirection.Down:\r\n          circle.center.y -= stepSize;\r\n          break;\r\n        case SceneDirection.Left:\r\n          circle.center.x -= stepSize;\r\n          break;\r\n        case SceneDirection.Right:\r\n          circle.center.x += stepSize;\r\n          break;\r\n        default:\r\n          console.error('unknown SceneDirection', data.direction);\r\n          return;\r\n      }\r\n\r\n      this.dataService.updateCircle(circle);\r\n    }\r\n  }\r\n\r\n  onLoadConfigSelected(): void {\r\n    this.dataService.loadFieldConfig().catch((err: any) => {\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n}\r\n","<ui-split>\r\n  <div left>\r\n    <ui-scene [settings]=\"settings\"\r\n              [selected]=\"selection$ | async\"\r\n              (clicked)=\"onClick($event)\"\r\n              (delete)=\"onDelete($event)\"\r\n              (move)=\"onMove($event)\"\r\n              (loadConfigTrigger)=\"onLoadConfigSelected()\"\r\n    ></ui-scene>\r\n  </div>\r\n  <div right>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</ui-split>\r\n","import {DataService} from '../../../services/data.service';\r\nimport {Component, HostBinding, OnInit} from '@angular/core';\r\nimport {SelectionService} from '../../../services/selection.service';\r\nimport {Router} from '@angular/router';\r\nimport {Vector2} from 'three';\r\nimport {SceneClickEvent} from '@ets-components/ui';\r\n\r\n@Component({\r\n  selector: 'app-walls',\r\n  templateUrl: './walls.component.html',\r\n  styleUrls: ['./walls.component.scss']\r\n})\r\nexport class WallsComponent implements OnInit {\r\n\r\n  static WALL_MIN_DISTANCE = 20;\r\n\r\n  @HostBinding('attr.data-testid') testId = 'scene-walls';\r\n\r\n  newWall?: Vector2;\r\n\r\n  constructor(private dataService: DataService,\r\n              private selectionService: SelectionService,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.selectionService.setSelectHandler(() => false);\r\n    this.selectionService.setClickHandler(async (event: SceneClickEvent) => {\r\n      this.setWallCreationPoint(event.position);\r\n      return false;\r\n    });\r\n    this.selectionService.select(null, true);\r\n  }\r\n\r\n  setWallCreationPoint(position: Vector2): void {\r\n    if (this.newWall) {\r\n      const from = this.newWall;\r\n      const to = position;\r\n\r\n      if (from.distanceTo(to) < WallsComponent.WALL_MIN_DISTANCE) {\r\n        return;\r\n      }\r\n\r\n      this.dataService.addWall(from, to).catch((error: any) => {\r\n        console.error('error during wall creation', error);\r\n      });\r\n\r\n      this.newWall = undefined;\r\n      this.router.navigateByUrl('/scene/scan');\r\n    } else {\r\n      this.newWall = position;\r\n    }\r\n  }\r\n}\r\n","<ui-header id=\"walls\" [title]=\"'cl0_scene_walls_title' | translate\"></ui-header>\r\n\r\n<div class=\"content\">\r\n  <p>{{ 'cl0_scene_walls_text' | translate }}</p>\r\n</div>\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl} from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n  /**\r\n   * Pipe Constructor\r\n   *\r\n   * @param _sanitizer: DomSanitezer\r\n   */\r\n  // tslint:disable-next-line\r\n  constructor(protected _sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  /**\r\n   * Transform\r\n   *\r\n   * @param value: string\r\n   * @param type: string\r\n   */\r\n  transform(value: string, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n    switch (type) {\r\n      case 'html':\r\n        return this._sanitizer.bypassSecurityTrustHtml(value);\r\n      case 'style':\r\n        return this._sanitizer.bypassSecurityTrustStyle(value);\r\n      case 'script':\r\n        return this._sanitizer.bypassSecurityTrustScript(value);\r\n      case 'url':\r\n        return this._sanitizer.bypassSecurityTrustUrl(value);\r\n      case 'resourceUrl':\r\n        return this._sanitizer.bypassSecurityTrustResourceUrl(value);\r\n      default:\r\n        return this._sanitizer.bypassSecurityTrustHtml(value);\r\n    }\r\n  }\r\n}\r\n","import { ETS_APP_CONVEX_HULL_URL, ETS_APP_CIRCLES_URL, ETS_APP_WALLS_URL,\r\n  ETS_APP_FIELDS_URL, ETS_APP_SCAN_DATA_URL, ETS_APP_SCENE_URL } from './../token';\r\nimport {Circle} from '../models/circle';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Inject, Injectable, InjectionToken} from '@angular/core';\r\nimport {Scene} from '../models/scene';\r\nimport {map, pluck} from 'rxjs/operators';\r\nimport {ScanData} from '../models/scan-data';\r\nimport {Field} from '../models/field';\r\nimport {ColorRGB} from '../models/color-rgb';\r\nimport {Vector3} from '../models/vector3';\r\nimport {Wall} from '../models/wall';\r\nimport {ConvexHull} from '../models/convex-hull';\r\nimport {ETS_APP_LOGIC_URL} from '../token';\r\n\r\n// @ts-ignore\r\nimport {sjsonHandler} from '@ets-components/sjson-converter';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommunicatorService {\r\n\r\n  constructor(\r\n    @Inject(ETS_APP_LOGIC_URL) private logicUrl: string,\r\n    @Inject(ETS_APP_CONVEX_HULL_URL) private convexHullUrl: string,\r\n    @Inject(ETS_APP_CIRCLES_URL) private circlesUrl: string,\r\n    @Inject(ETS_APP_WALLS_URL) private wallsUrl: string,\r\n    @Inject(ETS_APP_FIELDS_URL) private fieldsUrl: string,\r\n    @Inject(ETS_APP_SCAN_DATA_URL) private scanDataUrl: string,\r\n    @Inject(ETS_APP_SCENE_URL) private sceneUrl: string,\r\n    private http: HttpClient) {\r\n  }\r\n\r\n  private checkResponse(response: any): any {\r\n    if (response === null) {\r\n      return response;\r\n    }\r\n    const validFormat = sjsonHandler.checkFormat(response);\r\n    if (!(validFormat)) {\r\n      throw new Error('Response from backend is not in valid sjson format');\r\n    }\r\n    const valid = sjsonHandler.validate(response);\r\n    if (valid) {\r\n      return response.json;\r\n    } else {\r\n      const hasString = sjsonHandler.checkForString(response);\r\n      if (hasString) {\r\n        const validString = sjsonHandler.validateString(response);\r\n        if (validString) {\r\n          return response.json;\r\n        }\r\n      }\r\n    }\r\n    throw new Error('Response from Backend is not a valid sjson');\r\n  }\r\n\r\n  private toSJSON(obj: any): any {\r\n    const sjson = sjsonHandler.secureStringify(obj);\r\n    return sjsonHandler.addStringToSJSON(JSON.parse(sjson));\r\n  }\r\n\r\n  getSceneData(): Promise<Scene> {\r\n    const url = this.sceneUrl + '/v1/scene';\r\n    return this.http.get<any>(url)\r\n      // .pipe(map(this.checkResponse))\r\n      .pipe(map((data: any) => {\r\n        return Scene.parseJsonToScene(data);\r\n      }))\r\n      .toPromise<Scene>();\r\n  }\r\n\r\n  scanDevice(deviceId: string): Promise<ScanData> {\r\n    const url = this.scanDataUrl + `/v1/devices/${deviceId}/surrounding`;\r\n    return this.http.get(url)\r\n      // .pipe(map(this.checkResponse))\r\n      .pipe(map((data: any) => {\r\n        const surrounding = data.surrounding;\r\n        surrounding.push(new Vector3(0, 0, 0));\r\n        const fields = [];\r\n\r\n        for (const field of data.fields) {\r\n          const polygons = field.polygons?.map(p => new Vector3(p.x, p.y, p.z));\r\n\r\n          const fieldObj = new Field(field.uuid, field.fieldType, field.class, field.label,\r\n            field.transparency, new ColorRGB(field.color.r, field.color.b, field.color.g), [polygons]);\r\n\r\n          fields.push(fieldObj);\r\n        }\r\n\r\n        return new ScanData(surrounding, fields);\r\n      }))\r\n      .toPromise();\r\n  }\r\n\r\n  getDeviceScanFields(deviceId: string): Promise<Field[]> {\r\n    const url = this.fieldsUrl + `/v1/devices/${deviceId}/fields`;\r\n    return this.http.get(url)\r\n      // .pipe(map(this.checkResponse))\r\n      .pipe(\r\n        map((data: any) => {\r\n          const fields = [];\r\n\r\n          for (const field of data.fields) {\r\n            const polygons = field.polygons?.map((part: any[]) => {\r\n              return part?.map(p => new Vector3(p.x, p.y, p.z)) ?? [];\r\n            }) ?? [];\r\n\r\n            const fieldObj = new Field(field.uuid, field.fieldType, field.class, field.label,\r\n              field.transparency, new ColorRGB(field.color.r, field.color.b, field.color.g), polygons);\r\n\r\n            fields.push(fieldObj);\r\n          }\r\n\r\n          return fields;\r\n        }))\r\n      .toPromise();\r\n    // return Promise.resolve([]);\r\n  }\r\n\r\n  // walls\r\n\r\n  getWalls(): Promise<Wall[]> {\r\n    // const url = this.wallsUrl + `/v1/walls`;\r\n    // return this.http.get(url)\r\n    //   .pipe(\r\n    //     // map(this.checkResponse),\r\n    //     map((data: any) => {\r\n    //       const walls = [];\r\n    //       for (const key of Object.keys(data)) {\r\n    //         const wallObj = Wall.parseJson(data[key], key);\r\n    //         walls.push(wallObj);\r\n    //       }\r\n    //       return walls;\r\n    //     }))\r\n    //   .toPromise();\r\n    return Promise.resolve([]);\r\n  }\r\n\r\n  /**\r\n   * Adds a wall\r\n   * @returns wall object with id\r\n   */\r\n  addWall(from: Vector3, to: Vector3): Promise<Wall> {\r\n    const url = this.wallsUrl + `/v1/walls`;\r\n    const body = // this.toSJSON({\r\n      {\r\n      p1: {\r\n        x: from.x,\r\n        y: from.y,\r\n        z: from.z\r\n      },\r\n      p2: {\r\n        x: to.x,\r\n        y: to.y,\r\n        z: to.z\r\n      },\r\n    };\r\n    return this.http.post(url, body)\r\n      .pipe(\r\n        // map(this.checkResponse),\r\n        map((data: any) => {\r\n          return new Wall(data.wallid, from, to);\r\n        }))\r\n      .toPromise();\r\n  }\r\n\r\n  deleteWall(wallId: string): Promise<any> {\r\n    const url = this.wallsUrl + `/v1/walls/${wallId}`;\r\n    return this.http.delete(url).toPromise();\r\n  }\r\n\r\n  // circles\r\n\r\n  getCircles(): Promise<Circle[]> {\r\n    // const url = this.circlesUrl + `/v1/circles`;\r\n    // return this.http.get(url)\r\n    //   .pipe(\r\n    //     // map(this.checkResponse),\r\n    //     map((data: any) => {\r\n    //       const circles = [];\r\n    //       for (const key of Object.keys(data)) {\r\n    //         const circleObj = Circle.parseJson(data[key], key);\r\n    //         circles.push(circleObj);\r\n    //       }\r\n    //       return circles;\r\n    //     }))\r\n    //   .toPromise();\r\n    return Promise.resolve([]);\r\n  }\r\n\r\n  /**\r\n   * Adds a circle\r\n   * @param circle circle object without an id or id set to null\r\n   * @returns circle object with id\r\n   */\r\n  addCircle(circle: Circle): Promise<Circle> {\r\n    const url = this.circlesUrl + `/v1/circles`;\r\n    // const body = this.toSJSON(circle.getJsonObject());\r\n    const body = circle.getJsonObject();\r\n    return this.http.post(url, body)\r\n      .pipe(\r\n        // map(this.checkResponse),\r\n        map((data: any) => {\r\n          circle.id = data.circleId;\r\n          return circle;\r\n        }))\r\n      .toPromise();\r\n  }\r\n\r\n  editCircle(circle: Circle): Promise<any> {\r\n    const url = this.circlesUrl + `/v1/circles/${circle.id}`;\r\n    // const body = this.toSJSON(circle.getJsonObject());\r\n    const body = circle.getJsonObject();\r\n    return this.http.put(url, body).toPromise();\r\n  }\r\n\r\n  deleteCircle(circleId: string): Promise<any> {\r\n    const url = this.circlesUrl + `/v1/circles/${circleId}`;\r\n    return this.http.delete(url).toPromise();\r\n  }\r\n\r\n  getConvexHulls(): Promise<ConvexHull[]> {\r\n    const url = this.convexHullUrl + `/v1/scene/convex-hull`;\r\n    return this.http.get(url)\r\n      .pipe(\r\n        // map(this.checkResponse),\r\n        map((data: any) => {\r\n          const convexHulls = [];\r\n          for (const hull of data.convexHulls) {\r\n            const hullObj = ConvexHull.parseJson(hull);\r\n            convexHulls.push(hullObj);\r\n          }\r\n          return convexHulls;\r\n        }))\r\n      .toPromise();\r\n    // return Promise.resolve([]);\r\n  }\r\n\r\n  getFieldConfigAvailable(): Promise<boolean> {\r\n    // const url = this.logicUrl + `/logic/api/v10/fieldConfig`;\r\n    // return this.http.get(url)\r\n    //   .pipe(\r\n    //     map(this.checkResponse),\r\n    //     map((data: any) => {\r\n    //       return data.fieldConfigAvailable;\r\n    //     }))\r\n    //   .toPromise();\r\n    return Promise.resolve(false);\r\n  }\r\n\r\n  loadFieldConfig(): Promise<any> {\r\n    const url = this.logicUrl + `/logic/api/v10/fieldConfig`;\r\n    const body = this.toSJSON({loadConfig: true});\r\n    return this.http.post(url, body).toPromise();\r\n  }\r\n\r\n}\r\n","import {CommunicatorService} from './communicator.service';\r\nimport {SceneFields} from '../models/scene-fields';\r\nimport {SceneRobot} from '../models/scene-robot';\r\nimport {SceneDesk} from '../models/scene-desk';\r\nimport {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {Scene} from '../models/scene';\r\nimport {Device} from '../models/device';\r\nimport {DeviceLocation} from '../models/device-location';\r\nimport {LoadingService} from './loading.service';\r\nimport {ColorRGB} from '../models/color-rgb';\r\nimport {Vector3} from '../models/vector3';\r\nimport {DeviceConnectivity} from '../models/device-connectivity';\r\nimport {DeviceIdentity} from '../models/device-identity';\r\nimport {Wall} from '../models/wall';\r\nimport {filterNullish} from '../utils/rxjs';\r\nimport {ScanData} from '../models/scan-data';\r\nimport {Vector2} from 'three';\r\nimport {Circle} from '../models/circle';\r\nimport {ConvexHull} from '../models/convex-hull';\r\n\r\nexport interface SensorScans {\r\n  [deviceId: string]: SensorScan;\r\n}\r\n\r\nexport interface SensorScan {\r\n  visible: boolean;\r\n  data: ScanData;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  private initialized$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // saved data\r\n  private scene?: Scene;\r\n\r\n  // not saved data (user can edit)\r\n  private desk$ = new BehaviorSubject<SceneDesk | null>(null);\r\n  private robot$ = new BehaviorSubject<SceneRobot | null>(null);\r\n  private fields$ = new BehaviorSubject<SceneFields | null>(null);\r\n  private devices$ = new BehaviorSubject<Device[]>([]);\r\n  private locations$ = new BehaviorSubject<DeviceLocation[]>([]);\r\n  private sensorScans$ = new BehaviorSubject<SensorScans>({});\r\n  private walls$ = new BehaviorSubject<Wall[]>([]);\r\n  private circles$ = new BehaviorSubject<Circle[]>([]);\r\n  private convexHulls$ = new BehaviorSubject<ConvexHull[]>([]);\r\n\r\n  // indicates if the user has triggered a scan since last changes\r\n  // if the user sets a wall or circle it will be set to false\r\n  // the user must do a scan to enable NEXT in the state machine\r\n  private userHasScanned$ = new BehaviorSubject<boolean>(false);\r\n\r\n  constructor(\r\n    private loadingService: LoadingService,\r\n    private communicator: CommunicatorService\r\n  ) {\r\n  }\r\n\r\n  async init(): Promise<void> {\r\n    const loaded$ = new Subject();\r\n    this.loadingService.waitUntil(loaded$);\r\n\r\n    try {\r\n      await this.loadScene();\r\n      await Promise.all([\r\n        this.syncDesk(),\r\n        this.syncRobot(),\r\n        this.syncFields(),\r\n        this.syncLocations(),\r\n        this.syncDevices()\r\n      ]);\r\n      await this.loadWalls();\r\n      await this.loadCircles();\r\n      await this.loadConvexHulls();\r\n\r\n      this.initialized$.next(true);\r\n    } finally {\r\n      loaded$.complete();\r\n    }\r\n  }\r\n\r\n  isInitialized(): boolean {\r\n    return this.initialized$.getValue();\r\n  }\r\n\r\n  getInitialized(): Observable<boolean> {\r\n    return this.initialized$;\r\n  }\r\n\r\n  waitUntilInitialized(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.getInitialized().subscribe({\r\n        next: (initialized) => {\r\n          if (initialized) {\r\n            resolve();\r\n          }\r\n        },\r\n        error: (err: any) => reject(err)\r\n      });\r\n    });\r\n  }\r\n\r\n  async loadScene(): Promise<void> {\r\n    this.scene = await this.communicator.getSceneData();\r\n  }\r\n\r\n  async loadWalls(): Promise<void> {\r\n    const walls = await this.communicator.getWalls();\r\n    this.walls$.next(walls);\r\n  }\r\n\r\n  async loadCircles(): Promise<void> {\r\n    const circles = await this.communicator.getCircles();\r\n    this.circles$.next(circles);\r\n  }\r\n\r\n  async loadConvexHulls(): Promise<void> {\r\n    const convexHulls = await this.communicator.getConvexHulls();\r\n    this.convexHulls$.next(convexHulls);\r\n  }\r\n\r\n  async syncDesk(): Promise<void> {\r\n    if (this.scene) {\r\n      this.desk$.next({...this.scene.desk} as SceneDesk);\r\n    }\r\n  }\r\n\r\n  async syncRobot(): Promise<void> {\r\n    if (this.scene) {\r\n      this.robot$.next({...this.scene.robot} as SceneRobot);\r\n    }\r\n  }\r\n\r\n  async syncFields(): Promise<void> {\r\n    if (this.scene) {\r\n      this.fields$.next({...this.scene.fields} as SceneFields);\r\n    }\r\n  }\r\n\r\n  async syncLocations(): Promise<void> {\r\n    if (this.scene) {\r\n      this.locations$.next(this.scene.locations.map(\r\n        l => new DeviceLocation(\r\n          l.id,\r\n          new ColorRGB(l.color.r, l.color.b, l.color.g),\r\n          l.transparency,\r\n          new Vector3(l.position.x, l.position.y, l.position.z),\r\n          l.isFree\r\n        )));\r\n    }\r\n  }\r\n\r\n  async syncDevices(): Promise<void> {\r\n    if (this.scene) {\r\n      this.devices$.next(this.scene.devices.map(\r\n        d => new Device(\r\n          d.id,\r\n          new Vector3(d.position.x, d.position.y, d.position.z),\r\n          new Vector3(d.rotation.x, d.rotation.y, d.rotation.z),\r\n          d.location,\r\n          new DeviceConnectivity(d.connectivity.ip, d.connectivity.netmask, d.connectivity.gateway, d.connectivity.useDhcp),\r\n          new DeviceIdentity(d.identity.deviceName, d.identity.serialNumber, d.identity.typeKey, d.identity.fwVersion),\r\n          d.applicationChecksum\r\n        )));\r\n    }\r\n  }\r\n\r\n  getDesk$(): Observable<SceneDesk> {\r\n    return this.desk$.pipe(filterNullish());\r\n  }\r\n\r\n  getRobot$(): Observable<SceneRobot> {\r\n    return this.robot$.pipe(filterNullish());\r\n  }\r\n\r\n  getFields$(): Observable<SceneFields> {\r\n    return this.fields$.pipe(filterNullish());\r\n  }\r\n\r\n  getFields(): SceneFields | null {\r\n    return this.fields$.getValue();\r\n  }\r\n\r\n  getLocations$(): Observable<DeviceLocation[]> {\r\n    return this.locations$.asObservable();\r\n  }\r\n\r\n  getLocations(): DeviceLocation[] {\r\n    return this.locations$.getValue();\r\n  }\r\n\r\n  getDevices$(): Observable<Device[]> {\r\n    return this.devices$.asObservable();\r\n  }\r\n\r\n  getDevices(): Device[] {\r\n    return this.devices$.getValue();\r\n  }\r\n\r\n  getWalls$(): Observable<Wall[]> {\r\n    return this.walls$.asObservable();\r\n  }\r\n\r\n  getWalls(): Wall[] {\r\n    return this.walls$.getValue();\r\n  }\r\n\r\n  getCircles$(): Observable<Circle[]> {\r\n    return this.circles$.asObservable();\r\n  }\r\n\r\n  getCircles(): Circle[] {\r\n    return this.circles$.getValue();\r\n  }\r\n\r\n  getConvexHulls$(): Observable<ConvexHull[]> {\r\n    return this.convexHulls$.pipe(filterNullish());\r\n  }\r\n\r\n  getConvexHulls(): ConvexHull[] {\r\n    return this.convexHulls$.getValue();\r\n  }\r\n\r\n  async addWall(from: Vector2, to: Vector2): Promise<void> {\r\n    await this.communicator.addWall(\r\n      new Vector3(from.x, from.y, 0),\r\n      new Vector3(to.x, to.y, 0)\r\n    );\r\n    await this.loadWalls();\r\n    await this.updateAllScanFields();\r\n  }\r\n\r\n  async deleteWall(wallId: string): Promise<void> {\r\n    await this.communicator.deleteWall(wallId);\r\n    await this.loadWalls();\r\n    await this.updateAllScanFields();\r\n  }\r\n\r\n  async addCircle(circle: Circle): Promise<void> {\r\n    const circles = this.getCircles();\r\n    circles.push(circle);\r\n    this.circles$.next(circles);\r\n    await this.updateAllScanFields();\r\n  }\r\n\r\n  async saveCircle(circle: Circle): Promise<void> {\r\n    if (circle.id) {\r\n      await this.communicator.editCircle(circle);\r\n    } else {\r\n      await this.communicator.addCircle(circle);\r\n    }\r\n    await this.loadCircles();\r\n    await this.loadConvexHulls();\r\n    await this.updateAllScanFields();\r\n  }\r\n\r\n  async deleteCircle(circle: Circle): Promise<void> {\r\n    if (circle.id) {\r\n      // delete already saved circle\r\n      await this.communicator.deleteCircle(circle.id);\r\n      await this.loadCircles();\r\n      await this.loadConvexHulls();\r\n    } else {\r\n      // delete circle that only locally exists\r\n      const circles = this.getCircles().filter((c: Circle) => c.uuid !== circle.uuid);\r\n      this.circles$.next(circles);\r\n    }\r\n    await this.updateAllScanFields();\r\n  }\r\n\r\n  async updateCircle(circle: Circle): Promise<void> {\r\n    const circles = this.getCircles();\r\n    const index = circles.findIndex(c => c.uuid = circle.uuid);\r\n\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    circles[index] = circle;\r\n\r\n    this.circles$.next(circles);\r\n    await this.updateAllScanFields();\r\n  }\r\n\r\n  async scanAllDevices(): Promise<SensorScans> {\r\n    const currentData = this.getSensorScans();\r\n    const devices = this.getDevices();\r\n\r\n    for (const device of devices) {\r\n      const scanData = await this.communicator.scanDevice(device.id);\r\n      currentData[device.id] = {\r\n        data: scanData,\r\n        visible: true\r\n      };\r\n    }\r\n\r\n    this.sensorScans$.next(currentData);\r\n    this.userHasScanned$.next(true);\r\n\r\n    return this.getSensorScans();\r\n  }\r\n\r\n  async updateAllScanFields(): Promise<SensorScans> {\r\n    const currentData = this.getSensorScans();\r\n    const devices = this.getDevices();\r\n\r\n    for (const device of devices) {\r\n      if (currentData[device.id]) {\r\n        const scanData = currentData[device.id].data;\r\n        scanData.fields = await this.communicator.getDeviceScanFields(device.id);\r\n\r\n        currentData[device.id] = {\r\n          data: scanData,\r\n          visible: true\r\n        };\r\n      }\r\n    }\r\n\r\n    this.sensorScans$.next(currentData);\r\n\r\n    return this.getSensorScans();\r\n  }\r\n\r\n  toggleSensorScanVisibility(deviceId: string): void {\r\n    const scans = this.getSensorScans();\r\n\r\n    if (scans[deviceId]) {\r\n      scans[deviceId].visible = !scans[deviceId].visible;\r\n    }\r\n\r\n    this.sensorScans$.next(scans);\r\n  }\r\n\r\n  getSensorScans$(): Observable<SensorScans> {\r\n    return this.sensorScans$.asObservable();\r\n  }\r\n\r\n  getSensorScans(): SensorScans {\r\n    return this.sensorScans$.getValue();\r\n  }\r\n\r\n  clearSensorScans(): void {\r\n    if (Object.keys(this.getSensorScans()).length !== 0) {\r\n      return this.sensorScans$.next({});\r\n    }\r\n  }\r\n\r\n  getScene(): Scene | null | undefined {\r\n    return this.scene;\r\n  }\r\n\r\n  getUserHasScanned$(): Observable<boolean> {\r\n    return this.userHasScanned$.asObservable();\r\n  }\r\n\r\n  getUserHasScanned(): boolean {\r\n    return this.userHasScanned$.getValue();\r\n  }\r\n\r\n  isFieldConfigAvailable(): Promise<boolean> {\r\n    return this.communicator.getFieldConfigAvailable();\r\n  }\r\n\r\n  async loadFieldConfig(): Promise<void> {\r\n    return this.communicator.loadFieldConfig().then(() => {\r\n      this.loadWalls();\r\n      this.loadCircles();\r\n      this.loadConvexHulls();\r\n      this.updateAllScanFields();\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {LoadingDialogComponent} from '../components/loading-dialog/loading-dialog.component';\r\nimport {map} from 'rxjs/operators';\r\nimport {NoopScrollStrategy} from '@angular/cdk/overlay';\r\n\r\ninterface Loading {\r\n  token: Observable<any>;\r\n  dialogData?: LoadingDialogData;\r\n}\r\n\r\nexport interface LoadingDialogData {\r\n  text?: string;\r\n  countdown?: Date;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n  private pendingLoadings: Loading[] = [];\r\n  private loading$ = new BehaviorSubject<Loading | null>(null);\r\n  private dialogRef?: MatDialogRef<LoadingDialogComponent>;\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  public waitUntil(token: Observable<any>, dialogData?: LoadingDialogData): Observable<any> {\r\n    this.pendingLoadings.push({token, dialogData});\r\n\r\n    this.updateDialog();\r\n\r\n    return token;\r\n  }\r\n\r\n  private updateDialog(forceNext = false): void {\r\n    let loading = this.loading$.getValue();\r\n\r\n    if (forceNext || !loading) {\r\n      loading = this.pendingLoadings.pop() ?? null;\r\n\r\n      this.loading$.next(loading);\r\n\r\n      if (loading) {\r\n        this.dialogRef = this.dialog.open(LoadingDialogComponent, {\r\n          width: '200px',\r\n          scrollStrategy: new NoopScrollStrategy(),\r\n          data: loading.dialogData\r\n        });\r\n\r\n        const afterFinished = () => {\r\n          if (this.dialogRef) {\r\n            this.dialogRef.close();\r\n          }\r\n          this.updateDialog(true);\r\n        };\r\n\r\n        loading.token.subscribe({\r\n          complete: afterFinished,\r\n          error: afterFinished\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public isLoading$(): Observable<boolean> {\r\n    return this.loading$.pipe(map((loading: Loading | null) => loading !== null));\r\n  }\r\n\r\n  public isLoading(): boolean {\r\n    return this.loading$.getValue() !== null;\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NavigationItem} from '@ets-components/ui';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {DataService} from './data.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavigationService {\r\n\r\n  // static IDS_DISABLE_UNTIL_SCANNED = ['walls', 'circles'];\r\n  // static IDS_ONLY_IN_FREE_MODE = ['circles'];\r\n\r\n  static IDS_DISABLE_UNTIL_SCANNED = [];\r\n  static IDS_ONLY_IN_FREE_MODE = [];\r\n\r\n  static ITEMS = [];\r\n\r\n  static ALL_ITEMS = [\r\n    {\r\n      id: 'scan',\r\n      link: '/scene/scan',\r\n      testId: 'scene-navigation-scan',\r\n      icon: 'assets/icons/scan.png'\r\n    },\r\n    // {\r\n    //   id: 'walls',\r\n    //   link: '/scene/walls',\r\n    //   testId: 'scene-navigation-walls',\r\n    //   icon: 'assets/icons/walls.png',\r\n    //   disabled: true\r\n    // },\r\n    // {\r\n    //   id: 'circles',\r\n    //   link: '/scene/circles',\r\n    //   testId: 'scene-navigation-circles',\r\n    //   icon: 'assets/icons/circles.png'\r\n    // }\r\n  ] as NavigationItem[];\r\n\r\n  private currentItems = new BehaviorSubject<NavigationItem[]>(NavigationService.ITEMS);\r\n\r\n  constructor(private router: Router,\r\n              private dataService: DataService) {\r\n    this.router.events.subscribe((val: any) => {\r\n      if (val instanceof NavigationEnd) {\r\n        this.updateNavItems();\r\n      }\r\n    });\r\n\r\n    this.dataService.getFields$().subscribe(() => {\r\n      this.updateNavItems();\r\n    });\r\n    this.dataService.getUserHasScanned$().subscribe(() => {\r\n      this.updateNavItems();\r\n    });\r\n\r\n    this.dataService.waitUntilInitialized().then(() => {\r\n      this.updateNavItems();\r\n    });\r\n  }\r\n\r\n  updateNavItems(): void {\r\n    const singleCircleMode = this.dataService.getFields()?.singleCircleModeEnabled;\r\n    const userHasScanned = this.dataService.getUserHasScanned();\r\n\r\n    if (singleCircleMode || singleCircleMode == null) {\r\n      NavigationService.ITEMS = NavigationService.ALL_ITEMS.filter(item => {\r\n        return !NavigationService.IDS_ONLY_IN_FREE_MODE.includes(item.id);\r\n      });\r\n    } else {\r\n      NavigationService.ITEMS = NavigationService.ALL_ITEMS;\r\n    }\r\n\r\n    for (const item of NavigationService.ITEMS) {\r\n      if (NavigationService.IDS_DISABLE_UNTIL_SCANNED.includes(item.id)) {\r\n        item.disabled = !userHasScanned;\r\n      }\r\n    }\r\n\r\n    this.currentItems.next(NavigationService.ITEMS);\r\n  }\r\n\r\n  getItems(): Observable<NavigationItem[]> {\r\n    return this.currentItems.asObservable();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {DeviceLocation} from '../models/device-location';\r\nimport {first} from 'rxjs/operators';\r\nimport {DataService} from './data.service';\r\nimport {SceneClickEvent, SceneElement, SceneElementType} from '@ets-components/ui';\r\n\r\ntype SelectHandlerResult = boolean | SceneElement | null;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SelectionService {\r\n\r\n  /**\r\n   * The click handler is used on every click to support custom click behaviour.\r\n   *\r\n   * If the click handler returns `false` the click will be ignored.\r\n   * If the click handler is undefined or returns `true` the click will be processed.\r\n   */\r\n  private clickHandler?: (event: SceneClickEvent) => boolean | Promise<boolean>;\r\n\r\n  /**\r\n   * The select handler determines if a selection should be saved or ignored.\r\n   *\r\n   * If the select handler returns `false` the selection will be ignored.\r\n   * If the select handler is `undefined` or returns `true` the selection will be saved.\r\n   *\r\n   * If you want to select something else or deselect you can return a `SceneElement` or `null`.\r\n   */\r\n  private selectHandler?: (element: SceneElement | null) => SelectHandlerResult | Promise<SelectHandlerResult>;\r\n\r\n  /**\r\n   * The current selected element\r\n   */\r\n  private selection = new BehaviorSubject<SceneElement | null>(null);\r\n\r\n  constructor(private dataService: DataService) {\r\n  }\r\n\r\n  getSelection$(): Observable<SceneElement | null> {\r\n    return this.selection.asObservable();\r\n  }\r\n\r\n  getSelection(): SceneElement | null {\r\n    return this.selection.getValue();\r\n  }\r\n\r\n  setClickHandler(handler?: (event: SceneClickEvent) => Promise<boolean>): void {\r\n    this.clickHandler = handler;\r\n  }\r\n\r\n  getClickHandler(): undefined | ((event: SceneClickEvent) => boolean | Promise<boolean>) {\r\n    return this.clickHandler;\r\n  }\r\n\r\n  setSelectHandler(handler?: (element: SceneElement | null) => SelectHandlerResult | Promise<SelectHandlerResult>): void {\r\n    this.selectHandler = handler;\r\n  }\r\n\r\n  getSelectHandler(): undefined | ((element: SceneElement | null) => SelectHandlerResult | Promise<SelectHandlerResult>) {\r\n    return this.selectHandler;\r\n  }\r\n\r\n  async click(event: SceneClickEvent, force = false): Promise<void> {\r\n    if (!force && this.clickHandler) {\r\n      try {\r\n        const result = await this.clickHandler(event);\r\n        // abort click if handler returns `false`\r\n        if (result === false) {\r\n          return;\r\n        }\r\n      } catch {\r\n        return;\r\n      }\r\n    }\r\n\r\n    await this.select(event.element);\r\n  }\r\n\r\n  async select(element: SceneElement | null, force = false): Promise<void> {\r\n    let elementToSelect = element;\r\n\r\n    if (!force && this.selectHandler) {\r\n      try {\r\n        const result = await this.selectHandler(element);\r\n        // abort selection if handler returns `false`\r\n        if (result === false) {\r\n          return;\r\n        }\r\n        // the selectHandler may change the element to select\r\n        if (result !== true) {\r\n          elementToSelect = result;\r\n        }\r\n      } catch {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.selection.next(elementToSelect);\r\n  }\r\n\r\n  async autoSelectFreeSensor(): Promise<void> {\r\n    await this.dataService.waitUntilInitialized();\r\n\r\n    return new Promise((resolve) => {\r\n      if (this.getSelection()?.type === SceneElementType.Sensor) {\r\n        // there is already a location selected\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      this.dataService.getLocations$().pipe(first()).subscribe((locations: DeviceLocation[]) => {\r\n        if (!locations.length) {\r\n          resolve();\r\n          return;\r\n        }\r\n\r\n        const nextFreeLocation = locations.find(l => l.isFree);\r\n\r\n        if (nextFreeLocation) {\r\n          this.select(new SceneElement(SceneElementType.Sensor, nextFreeLocation.id));\r\n        } else {\r\n          this.select(new SceneElement(SceneElementType.Sensor, locations[0].id));\r\n        }\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const ETS_APP_LOGIC_URL = new InjectionToken<string>('ets.app.logic_url');\r\nexport const ETS_APP_CONVEX_HULL_URL = new InjectionToken<string>('ets.app.convex_hull_url');\r\nexport const ETS_APP_CIRCLES_URL = new InjectionToken<string>('ets.app.circles_url');\r\nexport const ETS_APP_WALLS_URL = new InjectionToken<string>('ets.app.walls_url');\r\nexport const ETS_APP_FIELDS_URL = new InjectionToken<string>('ets.app.fields_url');\r\nexport const ETS_APP_SCAN_DATA_URL = new InjectionToken<string>('ets.app.scan_data_url');\r\nexport const ETS_APP_SCENE_URL = new InjectionToken<string>('ets.app.scene_url');\r\n","import {Observable, OperatorFunction, pipe, UnaryFunction} from 'rxjs';\r\nimport {filter} from 'rxjs/operators';\r\n\r\n// see https://stackoverflow.com/questions/57999777/filter-undefined-from-rxjs-observable\r\nexport function filterNullish<T>(): UnaryFunction<Observable<T | null | undefined>, Observable<T>> {\r\n  return pipe(\r\n    filter(x => x != null) as OperatorFunction<T | null | undefined, T>\r\n  );\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  logicUrl: 'http://' + location.hostname + ':3002',\r\n  convexHullUrl: 'http://' + location.hostname + ':3002',\r\n  circlesUrl: 'http://' + location.hostname + ':3002',\r\n  wallsUrl: 'http://' + location.hostname + ':3002',\r\n  fieldsUrl: 'http://' + location.hostname + ':3002',\r\n  scanDataUrl: 'http://' + location.hostname + ':3002',\r\n  sceneUrl: 'http://' + location.hostname + ':3002',\r\n  statemachineUrl: 'ws://' + location.hostname + ':8080',\r\n  languageServiceHttpUrl: 'http://' + location.hostname + ':8999',\r\n  languageServiceWsUrl: 'ws://' + location.hostname + ':8999',\r\n  manualUrl: 'http://' + location.hostname + ':8090',\r\n  MAX_INTEGER_INPUT: 2147483646, // = java Integer.MAX_VALUE - 1\r\n  MIN_INTEGER_INPUT: -2147483647, // = java Integer.MIN_VALUE + 1\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\nimport 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {enableProdMode} from '@angular/core';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\n\r\nimport {AppModule} from './app/app.module';\r\nimport {environment} from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}